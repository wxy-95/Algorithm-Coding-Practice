【hashSet】 does not allow duplicate num and does not guarantee any order.

【题干1】输入一组数组，从中任意选两个数之和（不能重复使用），如果等于目标数，则输出T，否则输出F。
import java.util.*;

【解答1】
public class Main
{
	public static void main(String[] args) {
	    Solution solution = new Solution();
	    System.out.println(solution.FindTarget(new int[]{1,2,3,4}, target=12));
	}
}

class Solution{
    public boolean FindTarget(int[] nums, int target){
        Set<Integer> appeared = new HashSet<>();
        for (int num: nums){
            int targetNum = target - num;
            if(appeared.contains(targetNum)){
                return true;
            }
            appeared.add(num);
        }
        return false;
    }
}

【拓展问题2】输入一组数组，从中任意选两个数之和（能重复使用），如果等于目标数，则输出T，否则输出F。
【解答2】解答1 的基础上，最开始运行appeared.add(num);即可。

【拓展问题3】输入一组数组，从中任意选三个数之和，如果等于目标数，则输出T，否则输出F。
【解答3】固定一个数，然后从剩下的数组中找出两个数之和等于目标数减固定数。

【拓展问题4】输入一组已排序好的数组，从中任意选择两个数之和，如果等于目标数，则输出T，否则输出F。


